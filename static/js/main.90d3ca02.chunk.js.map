{"version":3,"sources":["components/BarGraphName/index.js","components/BarGraphLabel/index.js","components/BarGraphTooltip/index.js","components/BarGraph/index.js","App.js","serviceWorker.js","index.js"],"names":["BarGraphName","props","payload","x","width","y","value","height","react_default","a","createElement","Object","defineProperty","dy","fill","transform","concat","fontSize","getFontColor","toUpperCase","BarGraphLabel","textAnchor","Math","round","BarGraphTooltip","active","label","className","rank","BarGraph","setBarColor","team","es6","data","dataKey","tickSize","tickMargin","hide","padding","top","content","components_BarGraphTooltip","maxBarSize","components_BarGraphLabel","components_BarGraphName","map","player","i","key","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setTopDmg","request","err","response","body","console","log","JSON","parse","sort","b","hero_damage_avg_per_10m","setState","filter","header","setBottomDmg","dataLength","length","state","lib","components_BarGraph","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uaAqCeA,EAnCM,SAAAC,GAC2BA,EAAxCC,QADsB,IACbC,EAA+BF,EAA/BE,EAAMC,GAAyBH,EAA5BI,EAA4BJ,EAAzBG,OAAeE,GAAUL,EAAlBM,OAAkBN,EAAVK,OAmBpC,OACEE,EAAAC,EAAAC,cAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA,CACER,EAAGA,EAAIC,EAAQ,EACfC,EAAG,IACHQ,GAAI,GACJC,KAAK,QACLC,UAAS,cAAAC,OAAgBb,EAAIC,EAAQ,EAA5B,UACTa,SAAS,QANX,OAlBmB,SAAAH,GACnB,OAAOA,GACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACH,MAAO,QACT,QACE,MAAO,SAYHI,CAAajB,EAAMa,OAP3B,GAAAE,OASMV,EAAMa,iBCfDC,EAfO,SAAAnB,GAC0BA,EAAxCC,QADuB,IACdC,EAA+BF,EAA/BE,EAAGE,EAA4BJ,EAA5BI,EAAGD,EAAyBH,EAAzBG,MAAeE,GAAUL,EAAlBM,OAAkBN,EAAVK,OAEpC,OACEE,EAAAC,EAAAC,cAAA,QACEP,EAAGA,EAAIC,EAAQ,EACfC,EAAGA,EAAGS,KAAK,OACXD,IAAK,EACLQ,WAAW,UAJb,GAAAL,OAMMM,KAAKC,MAAMjB,MCKNkB,EAfS,SAAAvB,GAAS,IACvBwB,EAA2BxB,EAA3BwB,OAAQC,EAAmBzB,EAAnByB,MAAOxB,EAAYD,EAAZC,QAEvB,OAAIuB,GAAUvB,EAEVM,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,kBACbnB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,SAAb,GAAAX,OAAyBU,IACzBlB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,QAAb,SAAAX,OAA8Bd,EAAQ,GAAGA,QAAQ0B,OACjDpB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,QAAb,mBAAAX,OAAwCM,KAAKC,MAAMrB,EAAQ,GAAGI,UAI7D,MC0DMuB,EAjEE,SAAA5B,GACf,IAAM6B,EAAc,SAAAC,GAClB,OAAQA,GACN,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,QACE,MAAO,QAIb,OACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAU5B,MAAO,IAAKG,OAAQ,IAAK0B,KAAMhC,EAAMgC,MAC7CzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOE,QAAQ,OAAOC,SAAU,EAAGC,WAAY,IAC/C5B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAOK,MAAM,EAAMC,QAAS,CAAEC,IAAK,MACnC/B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAASQ,QAAShC,EAAAC,EAAAC,cAAC+B,EAAD,QAClBjC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKE,QAAQ,0BAA0BQ,WAAY,IAAK5B,KAAK,QAAQY,MAAOlB,EAAAC,EAAAC,cAACiC,EAAD,OAC1EnC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWE,QAAQ,OAAOM,QAAShC,EAAAC,EAAAC,cAACkC,EAAD,QAEjC3C,EAAMgC,KAAKY,IAAI,SAACC,EAAQC,GAAT,OACbvC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMgB,IAAG,QAAAhC,OAAU+B,GAAKjC,KAAMgB,EAAYgB,EAAOf,aCU9CkB,cAlEb,SAAAA,EAAYhD,GAAO,IAAAiD,EAAA,OAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,KAAAH,IACjBC,EAAAvC,OAAA0C,EAAA,EAAA1C,CAAAyC,KAAAzC,OAAA2C,EAAA,EAAA3C,CAAAsC,GAAAM,KAAAH,KAAMnD,KAORuD,UAAY,WACVC,IAAQ,gDAAiD,SAACC,EAAKC,EAAUC,GACnEF,GAAKG,QAAQC,IAAI,UAAWJ,GAEhC,IAAIzB,EAAO8B,KAAKC,MAAMJ,GAAM3B,KAE5BA,EAAKgC,KAAK,SAACxD,EAAGyD,GAAJ,OAAUA,EAAEC,wBAA0B1D,EAAE0D,0BAElDlC,EAAOA,EAAKY,IAAI,SAACC,EAAQC,GAEvB,OADAD,EAAOlB,KAAOmB,EAAI,EACXD,IAGTI,EAAKkB,SAAS,CACZnC,KAAMA,EAAKoC,OAAO,SAACvB,EAAQC,GAAT,OAAeA,EAAI,KACrCuB,OAAQ,6BAvBKpB,EA4BnBqB,aAAe,WACbd,IAAQ,gDAAiD,SAACC,EAAKC,EAAUC,GACnEF,GAAKG,QAAQC,IAAI,UAAWJ,GAEhC,IAAIzB,EAAO8B,KAAKC,MAAMJ,GAAM3B,KACxBuC,EAAavC,EAAKwC,OAEtBxC,EAAKgC,KAAK,SAACxD,EAAGyD,GAAJ,OAAUzD,EAAE0D,wBAA0BD,EAAEC,0BAElDlC,EAAOA,EAAKY,IAAI,SAACC,EAAQC,GAEvB,OADAD,EAAOlB,KAAO4C,EAAazB,EACpBD,IAGTI,EAAKkB,SAAS,CACZnC,KAAMA,EAAKoC,OAAO,SAACvB,EAAQC,GAAT,OAAeA,EAAI,KACrCuB,OAAQ,gCA1CZpB,EAAKwB,MAAQ,CACXzC,KAAM,GACNqC,OAAQ,cAJOpB,mFAkDjBE,KAAKI,6CAIL,OACEhD,EAAAC,EAAAC,cAACiE,EAAA,UAAD,KACEnE,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAK0C,KAAKsB,MAAMJ,QAChB9D,EAAAC,EAAAC,cAACkE,EAAD,CAAU3C,KAAMmB,KAAKsB,MAAMzC,OAC3BzB,EAAAC,EAAAC,cAACiE,EAAA,OAAD,CAAQE,QAASzB,KAAKI,WAAtB,OACAhD,EAAAC,EAAAC,cAACiE,EAAA,OAAD,CAAQE,QAASzB,KAAKmB,cAAtB,kBA7DUO,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.90d3ca02.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst BarGraphName = props => {\r\n  let { payload, x, y, width, height, value } = props;\r\n\r\n  const getFontColor = fill => {\r\n    switch(fill) {\r\n      case \"#feda00\":\r\n      case \"#f99f29\":\r\n      case \"#97d700\":\r\n      case \"#aa8a00\":\r\n      case \"#59cbe8\":\r\n      case \"#ffa000\":\r\n      case \"#fb7299\":\r\n      case \"#2FB228\":\r\n      case \"#c4c4c4\":\r\n        return \"black\";\r\n      default: \r\n        return \"white\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <text\r\n      x={x + width / 2}\r\n      y={450}\r\n      dy={14}\r\n      fill=\"white\"\r\n      transform={`rotate(270 ${x + width / 2}, 450)`}\r\n      fontSize=\"40px\"\r\n      fill={getFontColor(props.fill)}\r\n    >\r\n      {`${value.toUpperCase()}`}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport default BarGraphName;\r\n","import React from \"react\";\r\n\r\nconst BarGraphLabel = props => {\r\n  let { payload, x, y, width, height, value } = props;\r\n\r\n  return (\r\n    <text\r\n      x={x + width / 2}\r\n      y={y} fill=\"#666\"\r\n      dy={-6}\r\n      textAnchor=\"middle\"\r\n    >\r\n      {`${Math.round(value)}`}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport default BarGraphLabel;\r\n","import React from \"react\";\r\n\r\nconst BarGraphTooltip = props => {\r\n  const { active, label, payload } = props;\r\n\r\n  if (active && payload) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`${label}`}</p>\r\n        <p className=\"desc\">{`Rank: ${payload[0].payload.rank}`}</p>\r\n        <p className=\"desc\">{`Damage per 10m: ${Math.round(payload[0].value)}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default BarGraphTooltip;\r\n","import React from \"react\";\r\nimport { BarChart, XAxis, YAxis, Tooltip, Bar, LabelList, Cell } from \"recharts\";\r\n\r\nimport BarGraphName from \"../../components/BarGraphName\";\r\nimport BarGraphLabel from \"../../components/BarGraphLabel\";\r\nimport BarGraphTooltip from \"../../components/BarGraphTooltip\";\r\n\r\nconst BarGraph = props => {\r\n  const setBarColor = team => {\r\n    switch (team) {\r\n      case \"DAL\":\r\n        return \"#0072ce\";\r\n      case \"PHI\":\r\n        return \"#f99f29\";\r\n      case \"HOU\":\r\n        return \"#97d700\";\r\n      case \"BOS\":\r\n        return \"#174b97\";\r\n      case \"NYE\":\r\n        return \"#171c38\";\r\n      case \"SFS\":\r\n        return \"#fc4c02\";\r\n      case \"VAL\":\r\n        return \"#004438\";\r\n      case \"GLA\":\r\n        return \"#3c1053\";\r\n      case \"FLA\":\r\n        return \"#feda00\";\r\n      case \"SHD\":\r\n        return \"#d22630\";\r\n      case \"SEO\":\r\n        return \"#aa8a00\";\r\n      case \"LDN\":\r\n        return \"#59cbe8\";\r\n      case \"CDH\":\r\n        return \"#ffa000\";\r\n      case \"HZS\":\r\n        return \"#fb7299\";\r\n      case \"PAR\":\r\n        return \"#303d56\";\r\n      case \"TOR\":\r\n        return \"#000000\";\r\n      case \"VAN\":\r\n        return \"#2fb228\";\r\n      case \"WAS\":\r\n        return \"#990034\";\r\n      case \"ATL\":\r\n        return \"#c4c4c4\";\r\n      case \"GZC\":\r\n        return \"#122c42\";\r\n      default:\r\n        return \"red\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BarChart width={600} height={500} data={props.data}>\r\n      <XAxis dataKey=\"rank\" tickSize={0} tickMargin={8} />\r\n      <YAxis hide={true} padding={{ top: 10 }} />\r\n      <Tooltip content={<BarGraphTooltip />} />\r\n      <Bar dataKey=\"hero_damage_avg_per_10m\" maxBarSize={400} fill=\"black\" label={<BarGraphLabel />}>\r\n        <LabelList dataKey=\"name\" content={<BarGraphName />} />\r\n        {\r\n          props.data.map((player, i) => (\r\n            <Cell key={`cell-${i}`} fill={setBarColor(player.team)} />\r\n          ))\r\n        }\r\n      </Bar>\r\n    </BarChart>\r\n  );\r\n}\r\n\r\nexport default BarGraph;\r\n","import React, { Component, Fragment } from \"react\";\nimport request from \"request\";\nimport { Container, Button } from \"react-materialize\";\nimport \"./App.scss\";\n\nimport BarGraph from \"./components/BarGraph\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      header: \"Loading...\"\n    };\n  }\n\n  setTopDmg = () => {\n    request(\"https://api.overwatchleague.com/stats/players\", (err, response, body) => {\n      if (err) console.log(\"Error: \", err);\n\n      let data = JSON.parse(body).data;\n\n      data.sort((a, b) => b.hero_damage_avg_per_10m - a.hero_damage_avg_per_10m);\n\n      data = data.map((player, i) => {\n        player.rank = i + 1;\n        return player;\n      });\n\n      this.setState({\n        data: data.filter((player, i) => i < 10),\n        header: \"Top 10 damage dealers\"\n      })\n    });\n  }\n\n  setBottomDmg = () => {\n    request(\"https://api.overwatchleague.com/stats/players\", (err, response, body) => {\n      if (err) console.log(\"Error: \", err);\n\n      let data = JSON.parse(body).data;\n      let dataLength = data.length;\n\n      data.sort((a, b) => a.hero_damage_avg_per_10m - b.hero_damage_avg_per_10m);\n\n      data = data.map((player, i) => {\n        player.rank = dataLength - i;\n        return player;\n      });\n\n      this.setState({\n        data: data.filter((player, i) => i < 10),\n        header: \"Bottom 10 damage dealers\"\n      })\n    });\n  };\n\n  componentDidMount() {\n    this.setTopDmg();\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>OWL Stats</h1>\n        <h2>{this.state.header}</h2>\n        <BarGraph data={this.state.data} />\n        <Button onClick={this.setTopDmg}>Top</Button>\n        <Button onClick={this.setBottomDmg}>Bottom</Button>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}