{"version":3,"sources":["dummyData.js","components/BarGraphName/index.js","components/BarGraphLabel/index.js","components/BarGraphTooltip/index.js","components/BarGraph/index.js","App.js","serviceWorker.js","index.js"],"names":["dummyData","name","team","hero_damage_avg_per_10m","healing_avg_per_10m","BarGraphName","props","payload","x","width","y","value","height","react_default","a","createElement","Object","defineProperty","dy","fill","transform","concat","fontSize","getFontColor","toUpperCase","BarGraphLabel","textAnchor","Math","round","BarGraphTooltip","active","label","className","rank","BarGraph","setBarColor","es6","data","dataKey","tickSize","tickMargin","hide","padding","top","domain","content","components_BarGraphTooltip","sortBy","components_BarGraphLabel","components_BarGraphName","map","player","i","key","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPlayerData","request","err","response","body","console","log","JSON","parse","setState","playerData","pages","ceil","length","setTopDmg","state","sort","b","graphData","filter","header","graphMax","pagination","setTopHealing","handlePageSelect","event","page","_this2","_this3","lib","components_BarGraph","activePage","maxButtons","items","onSelect","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4cc1d77.chunk.js","sourcesContent":["export default [\r\n  {\r\n    name: \"Katisu\",\r\n    team: \"SHD\",\r\n    hero_damage_avg_per_10m: 13928,\r\n    healing_avg_per_10m: 12951\r\n  },\r\n  {\r\n    name: \"Danny\",\r\n    team: \"SEO\",\r\n    hero_damage_avg_per_10m: 4698,\r\n    healing_avg_per_10m: 13862\r\n  },\r\n  {\r\n    name: \"DizzyDwarf\",\r\n    team: \"SFS\",\r\n    hero_damage_avg_per_10m: 11594,\r\n    healing_avg_per_10m: 8192\r\n  },\r\n  {\r\n    name: \"Tatoe\",\r\n    team: \"DAL\",\r\n    hero_damage_avg_per_10m: 10124,\r\n    healing_avg_per_10m: 7297\r\n  },\r\n  {\r\n    name: \"Fuze\",\r\n    team: \"PHI\",\r\n    hero_damage_avg_per_10m: 9124,\r\n    healing_avg_per_10m: 9157\r\n  },\r\n  {\r\n    name: \"Outlaw\",\r\n    team: \"HOU\",\r\n    hero_damage_avg_per_10m: 12814,\r\n    healing_avg_per_10m: 8520\r\n  },\r\n  {\r\n    name: \"Yank\",\r\n    team: \"BOS\",\r\n    hero_damage_avg_per_10m: 10581,\r\n    healing_avg_per_10m: 9517\r\n  },\r\n  {\r\n    name: \"XL\",\r\n    team: \"NYE\",\r\n    hero_damage_avg_per_10m: 10682,\r\n    healing_avg_per_10m: 10519\r\n  },\r\n  {\r\n    name: \"NEEE\",\r\n    team: \"NYE\",\r\n    hero_damage_avg_per_10m: 9157,\r\n    healing_avg_per_10m: 9275\r\n  },\r\n  {\r\n    name: \"Vangaurd\",\r\n    team: \"VAL\",\r\n    hero_damage_avg_per_10m: 8157,\r\n    healing_avg_per_10m: 8158\r\n  },\r\n  {\r\n    name: \"Gladi\",\r\n    team: \"GLA\",\r\n    hero_damage_avg_per_10m: 10325,\r\n    healing_avg_per_10m: 7159\r\n  },\r\n  {\r\n    name: \"May\",\r\n    team: \"FLA\",\r\n    hero_damage_avg_per_10m: 7159,\r\n    healing_avg_per_10m: 10591\r\n  },\r\n  {\r\n    name: \"Dyno\",\r\n    team: \"SEO\",\r\n    hero_damage_avg_per_10m: 10000,\r\n    healing_avg_per_10m: 10000\r\n  },\r\n  {\r\n    name: \"Hero\",\r\n    team: \"CDH\",\r\n    hero_damage_avg_per_10m: 9157,\r\n    healing_avg_per_10m: 9257\r\n  },\r\n  {\r\n    name: \"Spitter\",\r\n    team: \"LDN\",\r\n    hero_damage_avg_per_10m: 10357,\r\n    healing_avg_per_10m: 6012\r\n  },\r\n  {\r\n    name: \"Doc\",\r\n    team: \"CDH\",\r\n    hero_damage_avg_per_10m: 6125,\r\n    healing_avg_per_10m: 11002\r\n  },\r\n  {\r\n    name: \"Sparkie\",\r\n    team: \"HZS\",\r\n    hero_damage_avg_per_10m: 8152,\r\n    healing_avg_per_10m: 9157\r\n  },\r\n  {\r\n    name: \"Rooster\",\r\n    team: \"PAR\",\r\n    hero_damage_avg_per_10m: 7159,\r\n    healing_avg_per_10m: 9571\r\n  },\r\n  {\r\n    name: \"Defi\",\r\n    team: \"TOR\",\r\n    hero_damage_avg_per_10m: 10257,\r\n    healing_avg_per_10m: 11295\r\n  },\r\n  {\r\n    name: \"Van\",\r\n    team: \"VAN\",\r\n    hero_damage_avg_per_10m: 6815,\r\n    healing_avg_per_10m: 6012\r\n  },\r\n  {\r\n    name: \"Justice\",\r\n    team: \"WAS\",\r\n    hero_damage_avg_per_10m: 7251,\r\n    healing_avg_per_10m: 8125\r\n  }\r\n];\r\n","import React from \"react\";\r\n\r\nconst BarGraphName = props => {\r\n  let { payload, x, y, width, height, value } = props;\r\n\r\n  const getFontColor = fill => {\r\n    switch(fill) {\r\n      case \"#feda00\":\r\n      case \"#f99f29\":\r\n      case \"#97d700\":\r\n      case \"#aa8a00\":\r\n      case \"#59cbe8\":\r\n      case \"#ffa000\":\r\n      case \"#fb7299\":\r\n      case \"#2FB228\":\r\n      case \"#c4c4c4\":\r\n      case \"#67a2b2\":\r\n        return \"black\";\r\n      default: \r\n        return \"white\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <text\r\n      x={x + width / 2}\r\n      y={450}\r\n      dy={14}\r\n      fill=\"white\"\r\n      transform={`rotate(270 ${x + width / 2}, 450)`}\r\n      fontSize=\"40px\"\r\n      fill={getFontColor(props.fill)}\r\n    >\r\n      {`${value.toUpperCase()}`}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport default BarGraphName;\r\n","import React from \"react\";\r\n\r\nconst BarGraphLabel = props => {\r\n  let { payload, x, y, width, height, value } = props;\r\n\r\n  return (\r\n    <text\r\n      x={x + width / 2}\r\n      y={y} fill=\"#666\"\r\n      dy={-6}\r\n      textAnchor=\"middle\"\r\n    >\r\n      {`${Math.round(value)}`}\r\n    </text>\r\n  );\r\n};\r\n\r\nexport default BarGraphLabel;\r\n","import React from \"react\";\r\n\r\nconst BarGraphTooltip = props => {\r\n  const { active, label, payload } = props;\r\n\r\n  if (active && payload) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`${payload[0].payload.name}`}</p>\r\n        <p className=\"desc\">{`Team: ${payload[0].payload.team}`}</p>\r\n        <p className=\"desc\">{`Damage per 10m: ${Math.round(payload[0].value)}`}</p>\r\n        <p className=\"desc\">{`Rank: ${payload[0].payload.rank}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default BarGraphTooltip;\r\n","import React from \"react\";\r\nimport { BarChart, XAxis, YAxis, Tooltip, Bar, LabelList, Cell } from \"recharts\";\r\n\r\nimport BarGraphName from \"../../components/BarGraphName\";\r\nimport BarGraphLabel from \"../../components/BarGraphLabel\";\r\nimport BarGraphTooltip from \"../../components/BarGraphTooltip\";\r\n\r\nconst BarGraph = props => {\r\n  const setBarColor = team => {\r\n    switch (team) {\r\n      case \"DAL\":\r\n        return \"#0072ce\";\r\n      case \"PHI\":\r\n        return \"#f99f29\";\r\n      case \"HOU\":\r\n        return \"#97d700\";\r\n      case \"BOS\":\r\n        return \"#174b97\";\r\n      case \"NYE\":\r\n        return \"#171c38\";\r\n      case \"SFS\":\r\n        return \"#fc4c02\";\r\n      case \"VAL\":\r\n        return \"#004438\";\r\n      case \"GLA\":\r\n        return \"#3c1053\";\r\n      case \"FLA\":\r\n        return \"#feda00\";\r\n      case \"SHD\":\r\n        return \"#d22630\";\r\n      case \"SEO\":\r\n        return \"#aa8a00\";\r\n      case \"LDN\":\r\n        return \"#59cbe8\";\r\n      case \"CDH\":\r\n        return \"#ffa000\";\r\n      case \"HZS\":\r\n        return \"#fb7299\";\r\n      case \"PAR\":\r\n        return \"#303d56\";\r\n      case \"TOR\":\r\n        return \"#000000\";\r\n      case \"VAN\":\r\n        return \"#2fb228\";\r\n      case \"WAS\":\r\n        return \"#990034\";\r\n      case \"ATL\":\r\n        return \"#c4c4c4\";\r\n      case \"GZC\":\r\n        return \"#67a2b2\";\r\n      default:\r\n        return \"red\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BarChart width={600} height={500} data={props.data}>\r\n      <XAxis dataKey=\"rank\" tickSize={0} tickMargin={8} />\r\n      <YAxis hide={true} padding={{ top: 15 }} domain={[0, \"dataMax\"]}/>\r\n      <Tooltip content={<BarGraphTooltip />} />\r\n      <Bar dataKey={props.sortBy} fill=\"black\" label={<BarGraphLabel />}>\r\n        <LabelList dataKey=\"name\" content={<BarGraphName />} />\r\n        {\r\n          props.data && props.data.map((player, i) => (\r\n            <Cell key={`cell-${i}`} fill={setBarColor(player.team)} />\r\n          ))\r\n        }\r\n      </Bar>\r\n    </BarChart>\r\n  );\r\n}\r\n\r\nexport default BarGraph;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport request from \"request\";\r\nimport { Container, Button, Pagination } from \"react-materialize\";\r\nimport \"./App.scss\";\r\nimport dummyData from \"./dummyData\";\r\n\r\nimport BarGraph from \"./components/BarGraph\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerData: [],\r\n      graphData: [],\r\n      sortBy: \"\",\r\n      graphMax: 0,\r\n      header: \"Loading...\",\r\n      pagination: 1,\r\n      pages: 10\r\n    };\r\n  }\r\n\r\n  getPlayerData = () => {\r\n    request(\"https://api.overwatchleague.com/stats/players\", (err, response, body) => {\r\n      if (err) console.log(\"Error: \", err);\r\n\r\n      let data = JSON.parse(body).data;\r\n\r\n      this.setState({\r\n        playerData: data,\r\n        pages: Math.ceil(data.length / 10)\r\n      }, () => this.setTopDmg(this.state.playerData));\r\n    });\r\n  };\r\n\r\n  setTopDmg = data => {\r\n    if (!data) return;\r\n\r\n    data.sort((a, b) => b.hero_damage_avg_per_10m - a.hero_damage_avg_per_10m);\r\n    data = data.map((player, i) => {\r\n      player.rank = i + 1;\r\n      return player;\r\n    });\r\n\r\n    this.setState({\r\n      graphData: data.filter((player, i) => i < 10),\r\n      header: \"Top 10 damage dealers\",\r\n      sortBy: \"hero_damage_avg_per_10m\",\r\n      graphMax: data[0].hero_damage_avg_per_10m,\r\n      pagination: 1\r\n    });\r\n  };\r\n\r\n  setTopHealing = data => {\r\n    if (!data) return;\r\n\r\n    data.sort((a, b) => b.healing_avg_per_10m - a.healing_avg_per_10m);\r\n    data = data.map((player, i) => {\r\n      player.rank = i + 1;\r\n      return player;\r\n    });\r\n\r\n    this.setState({\r\n      graphData: data.filter((player, i) => i < 10),\r\n      header: \"Top 10 healers\",\r\n      sortBy: \"healing_avg_per_10m\",\r\n      pagination: 1\r\n    });\r\n  };\r\n\r\n  handlePageSelect = (event, data) => {\r\n    if (!data) return;\r\n\r\n    const setGraphData = page => {\r\n      if (page * 10 > this.state.playerData.length) {\r\n        return data.filter((player, i) => i >= this.state.playerData.length - 10)\r\n      } else {\r\n        return data.filter((player, i) => i >= page * 10 - 10 && i < page * 10)\r\n      }\r\n    };\r\n\r\n    this.setState({\r\n      graphData: setGraphData(event),\r\n      pagination: event,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.getPlayerData();\r\n\r\n    console.log(dummyData.length);\r\n\r\n    this.setState(\r\n      {\r\n        playerData: dummyData,\r\n        pages: Math.ceil(dummyData.length / 10),\r\n      },\r\n      () => this.setTopDmg(this.state.playerData)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>OWL Stats</h1>\r\n        <h2>{this.state.header}</h2>\r\n        <BarGraph\r\n          data={this.state.graphData}\r\n          sortBy={this.state.sortBy}\r\n        />\r\n        <Pagination\r\n          activePage={this.state.pagination}\r\n          maxButtons={10}\r\n          items={this.state.pages}\r\n          onSelect={event => this.handlePageSelect(event, this.state.playerData)}\r\n        />\r\n        <Button onClick={() => this.setTopDmg(this.state.playerData)}>Top dps</Button>\r\n        <Button onClick={() => this.setTopHealing(this.state.playerData)}>Top healers</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}